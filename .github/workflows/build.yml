name: CI (merge develop to master)

on:
  pull_request:
    branches: [master]
    types: [opened]

jobs:
  build:
    name: Build, test and publish application
    if: ${{ github.event_name == 'pull_request' && github.head_ref == 'develop' && github.base_ref == 'master' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Github repository
        uses: actions/checkout@v2
      - name: Setup node.js and npm
        uses: actions/setup-node@v1
        with:
          node-version: '12'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@tdesaules'
      - name: Build application
        run: |
          npm install
          npm run build:prod
      - name: Run tests
        run: npm run test
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        with:
          projectBaseDir: src
          args: >
            -Dsonar.organization=${{ secrets.SONARCLOUD_ORGANIZATION_KEY }}
            -Dsonar.projectKey=${{ secrets.SONARCLOUD_PROJECK_KEY }}
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.language=js
            -Dsonar.sources=src
            -Dsonar.exclusions=./**/test/*.js
            -Dsonar.exclusions=./**/spec/*.js
            -Dsonar.tests=./src/tests
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
            -Dsonar.verbose=true
      - name: Report test coverage to DeepSource
        uses: deepsourcelabs/test-coverage-action@master
        with:
          key: javascript
          coverage-file: src/coverage/cobertura-coverage.xml
          dsn: ${{ secrets.DEEPSOURCE_DSN }}
          fail-ci-on-error: false
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact-coverage
          path: |
            dits/*
            coverage/*
          if-no-files-found: error
      - name: Publish package to Github
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}