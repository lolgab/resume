name: Release on Production

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Package application
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Github repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup node.js and npm
        uses: actions/setup-node@v1
        with:
          node-version: '12'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@tdesaules'
      - name: Build application
        run: |
          npm install
          npm run build:prod
      - name: Run tests
        run: npm run test
      - name: Retrieve package version
        run: grep version package.json | sed 's/.*"version":\s\"\(.*\)\",/\1/' > VERSION.md
      - name: Publish package to Github
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: |
            dits/*
            coverage/*
            VERSION.md
          if-no-files-found: error
  sonarqube:
    name: SonarQube
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Github repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: my-artifact
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  # release:
  #   name: Create Release
  #   if: ${{ github.ref == 'refs/heads/master' }}
  #   runs-on: ubuntu-latest
  #   needs: sonarqube
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: my-artifact
  #     - name: Set version environment variable
  #       run: export VERSION=$(cat VERSION.md)
  #     - name: Create release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ env.VERSION }}
  #         release_name: Release/${{ env.VERSION }}
  #         body: |
  #           Auto created release based on ${{ env.GITHUB_WORKFLOW }}
  #           by : ${{ env.GITHUB_ACTOR }}
  #           on : ${{ env.GITHUB_EVENT_NAME }}
  #         draft: false
  #         prerelease: false
  # deploy:
  #   name: Release master branch
  #   if: ${{ github.ref == 'refs/heads/no' }}
  #   runs-on: ubuntu-latest
  #   needs: create-release
  #   steps:
  #     - name: Setup node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '12'
  #         registry-url: 'https://npm.pkg.github.com'
  #         scope: '@tdesaules'
  #     - name: Install npm resume package
  #       run: |
  #         npm install @tdesaules/resume
  #         mv node_modules/@tdesaules/resume/dist .
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Deploy to Vercel
  #       run: |
  #         npm install --global vercel
  #         mkdir .vercel && echo '{"orgId":"${{ secrets.VERCEL_ORGID }}","projectId":"${{ secrets.VERCEL_PROJECTID_PRD }}"}' > .vercel/project.json
  #         vercel --token ${{ secrets.VERCEL_TOKEN }} --prod --confirm
