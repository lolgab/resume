name: Integration

on:
  pull_request:
    branches: [master]
    types: [opened, synchronize]

jobs:
  test:
    name: Unit Tests
    if: ${{ github.event_name == 'pull_request' && github.head_ref == 'develop' && github.base_ref == 'master' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Github repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup node.js and npm
        uses: actions/setup-node@v1
        with:
          node-version: '12'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@tdesaules'
      - name: Run unit tests
        run: |
          npm install
          npm run test
      - name: ESLint Analysis
        run: |
          npx eslint "src/**/*.{js,vue}" --format stylish
          npx eslint "src/**/*.{js,vue}" --format json --output-file coverage/eslint.json
      - name: Check if version correct
        run: |
          CURRENT_VERSION=$(npm view @tdesaules/resume | grep latest | sed 's/\x1b\[[0-9;]*m//g' | sed 's/.*\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+\).*/\1/g')
          NEXT_VERSION=$(grep '"version":' package.json | grep '"version":' package.json | sed 's/.*\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+\).*/\1/g')
          tools/compare --current_version $CURRENT_VERSION --next_version $NEXT_VERSION
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: coverage/*
          if-no-files-found: error
  sonarqube:
    name: SonarQube Analysis
    if: ${{ github.event_name == 'pull_request' && github.head_ref == 'develop' && github.base_ref == 'master' }}
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Github repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download coverage artifact
        uses: actions/download-artifact@v2
        with:
          name: my-artifact
          path: coverage
      - name: Replace sonar version based on package.json
        run: |
          NEXT_VERSION=$(grep '"version":' package.json | grep '"version":' package.json | sed 's/.*\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+\).*/\1/g')
          sed -i "s/sonar.projectVersion=need-to-be-replaced/sonar.projectVersion=$NEXT_VERSION/g" sonar-project.properties
          sed -i "s/sonar.tests=need-to-be-replaced/sonar.tests={{ github.workspace }}\/src\/specs,{{ github.workspace }}\/src\/tests/g" sonar-project.properties
      - name: SonarCloud scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  codeql:
    name: CodeQL Analysis
    if: ${{ github.event_name == 'pull_request' && github.head_ref == 'develop' && github.base_ref == 'master' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Github repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: CodeQL init
        uses: github/codeql-action/init@v1
        with:
          languages: javascript
      - name: CodeQL scan
        uses: github/codeql-action/analyze@v1
  shiftleft:
    name: ShiftLeft Analysis
    if: ${{ github.event_name == 'pull_request' && github.head_ref == 'develop' && github.base_ref == 'master' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Github repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Build
        run: |
          npm install
          npm run build:prod
      - name: ShiftLeft scan
        run: |
          mkdir bin
          curl https://cdn.shiftleft.io/download/sl > bin/sl
          chmod a+rx bin/sl
          bin/sl auth --org "${{ secrets.SHIFTLEFT_ORG }}" --token "${{ secrets.SHIFTLEFT_TOKEN }}" --diagnostic
          bin/sl analyze --app "resume" --cpg --js .
