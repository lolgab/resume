name: Integration

on:
  pull_request:
    branches: [master]
    types: [opened, synchronize]

jobs:
  sonarqube:
    name: Sonarqube
    if: ${{ github.ref == 'refs/heads/develop' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Github repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  codeql:
    name: CodeQL analysis
    if: ${{ github.event_name == 'pull_request' && github.head_ref == 'develop' && github.base_ref == 'master' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
    steps:
      - name: Checkout Github repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: CodeQL init
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
      - name: CodeQL Analyze
        uses: github/codeql-action/analyze@v1
  shiftleft:
    name: ShiftLeft
    if: ${{ github.event_name == 'pull_request' && github.head_ref == 'develop' && github.base_ref == 'master' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Build
        run: |
          npm install
          npm run build:prod
      - name: ShiftLeft Analyze
        run: |
          mkdir bin
          curl https://cdn.shiftleft.io/download/sl > bin/sl
          chmod a+rx bin/sl
          bin/sl auth --org "${{ secrets.SHIFTLEFT_ORG }}" --token "${{ secrets.SHIFTLEFT_TOKEN }}" --diagnostic
          bin/sl analyze --app "resume" --cpg --js .
  build:
    name: Build, test and publish application
    if: ${{ github.event_name == 'pull_request' && github.head_ref == 'develop' && github.base_ref == 'master' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Github repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup node.js and npm
        uses: actions/setup-node@v1
        with:
          node-version: '12'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@tdesaules'
      - name: Build application
        run: |
          npm install
          npm run build:prod
      - name: Run tests
        run: npm run test
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact-coverage
          path: |
            dits/*
            coverage/*
          if-no-files-found: error
      - name: Publish package to Github
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
